{"version":3,"sources":["components/vehicleItem/index.tsx","components/vehicleList/index.tsx","components/vehicleDetails/index.tsx","components/header/index.tsx","hooks/useDebouncedValue.ts","hooks/useCarList.tsx","constants/endpoints.ts","components/VehicleModal/index.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","components/header/header.module.css"],"names":["VehicleItem","props","onClick","bgColor","active","my","cursor","p","fontSize","data","brand","color","model","year","VehicleList","flex","className","map","vehicle","onSelected","id","selectedItem","VehicleDetails","visibility","pl","mt","mb","description","onClickEdit","leftIcon","Edit","colorScheme","Header","useState","search","setSearch","debouncedSearch","value","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearInterval","useDebouncedValue","onSubmitSearch","w","alignItems","onChange","event","target","placeholder","classes","input","initialState","vehicles","filteredVehicles","carListReducer","state","action","type","payload","BaseApi","process","VehicleModal","handleOnChange","setFormValues","formValues","isOpen","onClose","title","gap","templateColumns","variant","display","h","isChecked","sold","checked","htmlFor","ml","values","Number","parseInt","updateVehicle","addVehicle","size","mr","confirmLabel","App","useReducer","dispatch","modalVehicleState","setModalVehicleState","getVehicles","a","fetch","response","json","body","JSON","stringify","method","headers","previous","alert","message","theme","minH","overflow","filter","includes","justifyContent","icon","Add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","module","exports"],"mappings":"4RA+BeA,MArBf,SAAqBC,GACnB,OACE,cAAC,IAAD,CACEC,QAASD,EAAMC,QACfC,QAASF,EAAMG,OAAS,UAAY,QACpCC,GAAI,EACJC,OAAO,UAJT,SAME,eAAC,IAAD,CAAKC,EAAG,EAAR,UACE,cAAC,IAAD,CAASC,SAAS,KAAlB,SAAwBP,EAAMQ,KAAKC,QACnC,cAAC,IAAD,CAAMF,SAAS,KAAKG,MAAM,OAA1B,SACGV,EAAMQ,KAAKG,QAEd,cAAC,IAAD,CAAMJ,SAAS,KAAKG,MAAM,WAA1B,SACGV,EAAMQ,KAAKI,aCOPC,MApBf,SAAqBb,GACnB,OACE,cAAC,IAAD,CAAKc,KAAK,IAAIC,UAAU,gBAAxB,SACE,eAAC,IAAD,CAAKX,GAAI,EAAT,UACE,cAAC,IAAD,CAASG,SAAS,KAAKG,MAAM,WAA7B,kCAGCV,EAAMQ,KAAKQ,KAAI,SAACC,GAAD,aACd,cAAC,EAAD,CACEhB,QAAS,kBAAMD,EAAMkB,WAAWD,IAChCd,OAAQc,EAAQE,MAAR,UAAenB,EAAMoB,oBAArB,aAAe,EAAoBD,IAC3CX,KAAMS,GACDA,EAAQE,a,iBCiCVE,MA9Cf,SAAwBrB,GAA6B,IAAD,QAClD,OACE,eAAC,IAAD,CACEsB,WAAYtB,EAAMQ,KAAO,UAAY,SACrCM,KAAK,IACLS,GAAI,EACJR,UAAU,kBAJZ,UAME,cAAC,IAAD,CAAKS,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,IAAD,CAASlB,SAAS,KAAKG,MAAM,WAA7B,wBAIF,eAAC,IAAD,CAAKJ,EAAG,EAAGJ,QAAQ,UAAnB,UACE,cAAC,IAAD,CAAMQ,MAAM,OAAOH,SAAS,MAA5B,mBACGP,EAAMQ,YADT,aACG,EAAYG,QAEf,eAAC,IAAD,CAAMa,GAAI,EAAV,UACE,eAAC,IAAD,CAAKV,KAAK,IAAV,UACE,cAAC,IAAD,CAASP,SAAS,KAAlB,mBACA,cAAC,IAAD,CAAMG,MAAM,WAAWH,SAAS,KAAhC,mBACGP,EAAMQ,YADT,aACG,EAAYC,WAGjB,eAAC,IAAD,CAAKK,KAAK,IAAV,UACE,cAAC,IAAD,CAASP,SAAS,KAAlB,iBACA,cAAC,IAAD,CAAMG,MAAM,WAAWH,SAAS,KAAhC,mBACGP,EAAMQ,YADT,aACG,EAAYI,aAInB,cAAC,IAAD,CAAKR,GAAI,EAAT,SACE,cAAC,IAAD,oBAAOJ,EAAMQ,YAAb,aAAO,EAAYkB,gBAErB,cAAC,IAAD,UACE,cAAC,IAAD,CACEzB,QAASD,EAAM2B,YACfC,SAAU,cAACC,EAAA,EAAD,IAAcC,YAAY,OAFtC,6B,iBCPKC,MA3Bf,SAAgB/B,GACd,MAA4BgC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,ECXO,SAA2BC,EAAeC,GACvD,MAA4CL,mBAASI,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KAOA,OALAC,qBAAU,WACR,IAAIC,EAAQC,YAAW,kBAAMH,EAAkBH,KAAQC,GACvD,OAAO,kBAAMM,cAAcF,MAC1B,CAACL,EAAOC,IAEJC,EDGiBM,CAAkBX,EAAQ,KAMlD,OAJAO,qBAAU,WACRxC,EAAM6C,eAAeV,KACpB,CAACA,IAGF,eAAC,IAAD,CAAMW,EAAE,OAAO5C,QAAQ,UAAvB,UACE,cAAC,IAAD,CAAMY,KAAK,IAAIiC,WAAW,SAASxB,GAAI,GAAvC,SACE,cAAC,IAAD,CAAShB,SAAS,MAAMG,MAAM,QAA9B,yBAIF,cAAC,IAAD,CAAMI,KAAK,IAAIR,EAAG,EAAGJ,QAAQ,iBAA7B,SACE,uBACEkC,MAAOH,EACPe,SAAU,SAACC,GAAD,OAAWf,EAAUe,EAAMC,OAAOd,QAC5Ce,YAAY,wBACZpC,UAAWqC,IAAQC,cE5BvBC,EAA6B,CACjCC,SAAU,GACVC,iBAAkB,IAcpB,SAASC,EACPC,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,eACH,OAAO,2BACFF,GADL,IAEEtC,aAAcuC,EAAOE,UAEzB,IAAK,wBACH,OAAO,2BACFH,GADL,IAEEF,iBAAkBG,EAAOE,UAE7B,IAAK,eACH,OAAO,2BACFH,GADL,IAEEH,SAAUI,EAAOE,QACjBL,iBAAkBG,EAAOE,UAE7B,QACE,OAAOH,GCzCN,IAAMI,EAAUC,wB,4DC8HRC,MA7Ff,SAAsBhE,GAA2B,IAAD,EAExCiE,EAAiB,SAAChB,GACtBjD,EAAMkE,cAAN,2BAAwBlE,EAAMmE,YAA9B,kBAA2ClB,EAAMC,OAAO/B,GAAM8B,EAAMC,OAAOd,UAqB7E,OACE,eAAC,IAAD,CAAOgC,OAAQpE,EAAMoE,OAAQC,QAASrE,EAAMqE,QAA5C,UACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,UAAcrE,EAAMsE,QACpB,eAAC,IAAD,WACE,eAAC,IAAD,CAAMC,IAAI,OAAOC,gBAAgB,iBAAjC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMjE,SAAS,KAAf,qBACA,cAAC,IAAD,CACEY,GAAG,QACH6B,SAAUiB,EACV7B,MAAOpC,EAAMmE,WAAWxD,MACxB8D,QAAQ,cAEZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAMlE,SAAS,KAAf,mBACA,cAAC,IAAD,CACEY,GAAG,QACH6B,SAAUiB,EACV7B,MAAOpC,EAAMmE,WAAW1D,MACxBgE,QAAQ,cAEZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAMlE,SAAS,KAAf,iBACA,cAAC,IAAD,CACEY,GAAG,OACHyC,KAAK,SACLZ,SAAUiB,EACV7B,MAAOpC,EAAMmE,WAAWvD,KACxB6D,QAAQ,cAEZ,cAAC,IAAD,UACE,eAAC,IAAD,CAAaC,QAAQ,OAAOC,EAAE,OAAO5B,WAAW,SAAhD,UACE,cAAC,IAAD,CAAQ5B,GAAG,OAAOyD,UAAS,UAAE5E,EAAMmE,WAAWU,YAAnB,SAAkC7B,SApD5C,SAACC,GAC9BjD,EAAMkE,cAAN,2BAAwBlE,EAAMmE,YAA9B,kBAA2ClB,EAAMC,OAAO/B,GAAM8B,EAAMC,OAAO4B,cAoD/D,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAG,OAA7B,6BAMN,eAAC,IAAD,WACE,cAAC,IAAD,CAAM5E,GAAG,MAAMG,SAAS,KAAxB,6BAGA,cAAC,IAAD,CACEY,GAAG,cACH6B,SAAUiB,EACV7B,MAAOpC,EAAMmE,WAAWzC,YACxB+C,QAAQ,iBAGd,eAAC,IAAD,WACE,cAAC,IAAD,CACExE,QApEV,WACE,IAAMgF,EAAM,2BACPjF,EAAMmE,YADC,IAEVvD,KAAMsE,OAAOC,SAASnF,EAAMmE,WAAWvD,QAGrCZ,EAAMmE,WAAWhD,GACnBnB,EAAMoF,cAAcH,GAItBjF,EAAMqF,WAAWJ,IA0DTK,KAAK,KAAKC,GAAI,EAAGzD,YAAY,OAF/B,SAGG9B,EAAMwF,eAET,cAAC,IAAD,CACEvF,QAASD,EAAMqE,QACfiB,KAAK,KAAKxD,YAAY,MAFxB,8BC7FJwB,EAAe,CACjB3C,MAAO,GACPF,MAAO,GACPG,KAAM,EACNiE,MAAM,EACNnD,YAAa,IAGJ+D,EAAM,WACjB,MHeOC,qBAAWjC,EAAgBH,GGflC,mBAAOI,EAAP,KAAciC,EAAd,KACA,EAAoC3D,mBAAkBsB,GAAtD,mBAAOa,EAAP,KAAmBD,EAAnB,KAEA,EAAkDlC,mBAAS,CACzDoC,QAAQ,EACRE,MAAO,kBACPkB,aAAc,QAHhB,mBAAOI,EAAP,KAA0BC,EAA1B,KAJuB,SA0BRC,IA1BQ,2EA0BvB,8BAAAC,EAAA,sEACyBC,MAAM,GAAD,OAAIlC,EAAJ,cAD9B,cACQmC,EADR,gBAEqBA,EAASC,OAF9B,OAEQ1F,EAFR,OAGEmF,EAAS,CAAE/B,KAAM,eAAgBC,QAASrD,IAH5C,4CA1BuB,kEAyCvB,sBAAAuF,EAAA,yDACOrC,EAAMtC,aADb,iDAEE8C,EAAcR,EAAMtC,cACpByE,EAAqB,CACnBL,aAAc,SACdpB,QAAQ,EACRE,MAAO,sBANX,4CAzCuB,kEAkDrB,WAA6BrD,GAA7B,SAAA8E,EAAA,+EAEQC,MAAM,GAAD,OAAIlC,EAAJ,qBAAwB7C,EAAQE,IAAM,CAC/CgF,KAAMC,KAAKC,UAAUpF,GACrBqF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBANtB,OASEV,GAAqB,SAAAW,GAAQ,kCAAUA,GAAV,IAAoBpC,QAAQ,OACzDF,EAAcZ,GACdqC,EAAS,CAAE/B,KAAM,eAAgBC,QAAS5C,IAC1C6E,IAZF,gDAcEW,MAAM,KAAIC,SAdZ,0DAlDqB,kEAqEvB,WAA0BzF,GAA1B,SAAA8E,EAAA,+EAEUC,MAAM,GAAD,OAAIlC,EAAJ,aAAwB,CACjCqC,KAAMC,KAAKC,UAAUpF,GACrBqF,OAAQ,OACRC,QAAS,CACP,eAAgB,sBANxB,OASIV,GAAqB,SAAAW,GAAQ,kCAAUA,GAAV,IAAoBpC,QAAQ,OACzDF,EAAcZ,GACdwC,IAXJ,gDAaIW,MAAM,KAAIC,SAbd,0DArEuB,sBAsFvB,OAjDAlE,qBAAU,WACRsD,MACC,IAgDD,cAAC,IAAD,CAAgBa,MAAOA,QAAvB,SACE,eAAC,IAAD,CAAMC,KAAK,QAAQ9D,EAAE,OAAO+D,SAAS,SAAS3G,QAAQ,UAAtD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CACE2C,eA3DiB,SAACZ,GAC1B,IAAM4B,EAAUH,EAAMH,SAASuD,QAAO,SAAA7F,GAAO,OAAIA,EAAQN,MAAMoG,SAAS9E,MACxE0D,EAAS,CAAE/B,KAAM,wBAAyBC,eA2DpC,eAAC,IAAD,CAAKf,EAAE,OAAOxC,EAAG,GAAjB,UACE,eAAC,IAAD,CAAM0G,eAAe,gBAArB,UACE,cAAC,IAAD,CAAMzG,SAAS,MAAf,wBACA,cAAC,IAAD,CACEN,QA1ES,kBACrB4F,GAAqB,SAACW,GAAD,mBAAC,eAAmBA,GAApB,IAA8BpC,QAAQ,QA0E/C,aAAW,cACXtC,YAAY,OACZwD,KAAK,KACL2B,KAAM,cAACC,EAAA,EAAD,SAGV,eAAC,IAAD,WACE,cAAC,EAAD,CACEhG,WAhGW,SAACkB,GACxBuD,EAAS,CAAE/B,KAAM,eAAgBC,QAASzB,KAgG9BhB,aAAcsC,EAAMtC,aACpBZ,KAAMkD,EAAMF,mBAEd,cAAC,EAAD,CACE7B,YA/GS,2CAgHTnB,KAAMkD,EAAMtC,wBAIpB,cAAC,EAAD,CACEkD,MAAOsB,EAAkBtB,MACzBD,QAvGc,WACpBH,EAAcZ,GACduC,GAAqB,SAACW,GAAD,mBAAC,eACjBA,GADgB,IAEnBpC,QAASoC,EAASpC,aAoGdD,WAAYA,EACZD,cAAeA,EACfmB,WAzHe,4CA0HfD,cA1He,4CA2HfI,aAAcI,EAAkBJ,aAChCpB,OAAQwB,EAAkBxB,eC5IrB+C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAACkB,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAMjC,YCvH5BS,K,mBCtBA0B,EAAOC,QAAU,CAAC,MAAQ,yB","file":"static/js/main.61ad2a7b.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Heading, Text } from '@chakra-ui/react';\nimport { Vehicle } from '../../model/Vehicle';\n\ninterface VehicleItemProps {\n  data: Vehicle;\n  active?: boolean;\n  onClick: () => void;\n}\n\nfunction VehicleItem(props: VehicleItemProps) {\n  return (\n    <Box\n      onClick={props.onClick}\n      bgColor={props.active ? '#f1f2f0' : 'white'}\n      my={4}\n      cursor=\"pointer\"\n    >\n      <Box p={4}>\n        <Heading fontSize=\"xl\">{props.data.brand}</Heading>\n        <Text fontSize=\"xl\" color=\"teal\">\n          {props.data.model}\n        </Text>\n        <Text fontSize=\"md\" color=\"gray.400\">\n          {props.data.year}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n\nexport default VehicleItem;\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { Vehicle } from '../../model/Vehicle';\nimport VehicleItem from '../vehicleItem';\n\ninterface VehicleListProps {\n  data: Vehicle[];\n  selectedItem?: Vehicle;\n  onSelected: (data: Vehicle) => void;\n}\n\nfunction VehicleList(props: VehicleListProps) {\n  return (\n    <Box flex=\"1\" className=\"vehicles-list\">\n      <Box my={8}>\n        <Heading fontSize=\"md\" color=\"gray.600\">\n          Lista de ve√≠culos\n        </Heading>\n        {props.data.map((vehicle) => (\n          <VehicleItem\n            onClick={() => props.onSelected(vehicle)}\n            active={vehicle.id === props.selectedItem?.id}\n            data={vehicle}\n            key={vehicle.id}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default VehicleList;\n","import React from 'react';\nimport { Box, Button, Flex, Heading, Text } from '@chakra-ui/react';\nimport { EditIcon } from '@chakra-ui/icons';\nimport { Vehicle } from '../../model/Vehicle';\n\ninterface VehicleDetailsProps {\n  data?: Vehicle;\n  onClickEdit: () => void;\n}\n\nfunction VehicleDetails(props: VehicleDetailsProps) {\n  return (\n    <Box\n      visibility={props.data ? 'visible' : 'hidden'}\n      flex=\"1\"\n      pl={4}\n      className=\"vehicle-details\"\n    >\n      <Box mt={8} mb={4}>\n        <Heading fontSize=\"md\" color=\"gray.600\">\n          Detalhes\n        </Heading>\n      </Box>\n      <Box p={4} bgColor=\"#f1f2f0\">\n        <Text color=\"teal\" fontSize=\"2xl\">\n          {props.data?.model}\n        </Text>\n        <Flex mt={8}>\n          <Box flex=\"1\">\n            <Heading fontSize=\"xl\">Marca</Heading>\n            <Text color=\"gray.400\" fontSize=\"md\">\n              {props.data?.brand}\n            </Text>\n          </Box>\n          <Box flex=\"1\">\n            <Heading fontSize=\"xl\">Ano</Heading>\n            <Text color=\"gray.400\" fontSize=\"md\">\n              {props.data?.year}\n            </Text>\n          </Box>\n        </Flex>\n        <Box my={8}>\n          <Text>{props.data?.description}</Text>\n        </Box>\n        <Box>\n          <Button \n            onClick={props.onClickEdit}\n            leftIcon={<EditIcon />} colorScheme=\"teal\">\n            Editar\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default VehicleDetails;\n","import React from 'react';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport classes from './header.module.css';\nimport { useState } from 'react';\nimport useDebouncedValue from '../../hooks/useDebouncedValue';\nimport { useEffect } from 'react';\n\ninterface HeaderProps {\n  onSubmitSearch: (query: string) => void;\n}\n\nfunction Header(props: HeaderProps) {\n  const [search, setSearch] = useState('');\n  const debouncedSearch = useDebouncedValue(search, 600);\n\n  useEffect(() => {\n    props.onSubmitSearch(debouncedSearch)\n  }, [debouncedSearch])\n\n  return (\n    <Flex w=\"100%\" bgColor=\"#364147\">\n      <Flex flex=\"1\" alignItems=\"center\" pl={16}>\n        <Heading fontSize=\"3xl\" color=\"white\">\n          Fullstack\n        </Heading>\n      </Flex>\n      <Flex flex=\"1\" p={3} bgColor=\"blackAlpha.400\">\n        <input\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n          placeholder=\"DIGITE seu ve√≠culo\"\n          className={classes.input}\n        />\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default Header;\n","import { useEffect, useState } from 'react';\n\nexport default function useDebouncedValue(value: string, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    let timer = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearInterval(timer);\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useReducer } from 'react';\nimport { Vehicle } from '../model/Vehicle';\n\nconst initialState: CarListState = {\n  vehicles: [],\n  filteredVehicles: []\n};\n\ninterface CarListState {\n  vehicles: Vehicle[];\n  filteredVehicles: Vehicle[];\n  selectedItem?: Vehicle;\n}\n\ntype CarListActions =\n  | { type: 'CAR_SELECTED'; payload: Vehicle }\n  | { type: 'SET_FILTERED_VEHICLES'; payload: Vehicle[]}\n  | { type: 'SET_VEHICLES'; payload: Vehicle[] };\n\nfunction carListReducer(\n  state: CarListState,\n  action: CarListActions\n): CarListState {\n  switch (action.type) {\n    case 'CAR_SELECTED':\n      return {\n        ...state,\n        selectedItem: action.payload,\n      };\n    case 'SET_FILTERED_VEHICLES':\n      return {\n        ...state,\n        filteredVehicles: action.payload\n      }\n    case 'SET_VEHICLES':\n      return {\n        ...state,\n        vehicles: action.payload,\n        filteredVehicles: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default function useCarList() {\n  return useReducer(carListReducer, initialState);\n}\n","export const BaseApi = process.env.REACT_APP_API_URL;\n","import {\n  FormControl,\n  Grid,\n  GridItem,\n  Input,\n  FormLabel,\n  Switch,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  Box,\n  Textarea,\n  ModalFooter,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { Vehicle } from '../../model/Vehicle';\n\ninterface VehicleModalProps {\n  isOpen: boolean;\n  title: string;\n  formValues: Vehicle;\n  setFormValues:  React.Dispatch<React.SetStateAction<Vehicle>>;\n  onClose: () => void;\n  addVehicle: (vehicle: Vehicle) => void;\n  updateVehicle: (vehicle: Vehicle) => void;\n  confirmLabel: string;\n}\n\n\nfunction VehicleModal(props: VehicleModalProps) {\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    props.setFormValues({...props.formValues, [event.target.id]:  event.target.value })\n  }\n\n  const handleOnCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.setFormValues({...props.formValues, [event.target.id]:  event.target.checked })\n  }\n\n  function handleOnConfirm() {\n    const values = {\n      ...props.formValues,\n      year: Number.parseInt(props.formValues.year as unknown as string)\n    }\n    \n    if (props.formValues.id) {\n      props.updateVehicle(values)\n      return;\n    }\n\n    props.addVehicle(values);\n  }\n\n  return (\n    <Modal isOpen={props.isOpen} onClose={props.onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{props.title}</ModalHeader>\n        <ModalBody>\n          <Grid gap=\"16px\" templateColumns=\"repeat(2, 1fr)\">\n            <GridItem>\n              <Text fontSize=\"sm\">Veiculo</Text>\n              <Input \n                id=\"model\"\n                onChange={handleOnChange}\n                value={props.formValues.model}\n                variant=\"filled\" />\n            </GridItem>\n            <GridItem>\n              <Text fontSize=\"sm\">Marca</Text>\n              <Input \n                id=\"brand\"\n                onChange={handleOnChange}\n                value={props.formValues.brand}\n                variant=\"filled\" />\n            </GridItem>\n            <GridItem>\n              <Text fontSize=\"sm\">Ano</Text>\n              <Input \n                id=\"year\"\n                type=\"number\"\n                onChange={handleOnChange}\n                value={props.formValues.year}\n                variant=\"filled\" />\n            </GridItem>\n            <GridItem>\n              <FormControl display=\"flex\" h=\"100%\" alignItems=\"center\">\n                <Switch id=\"sold\" isChecked={props.formValues.sold ?? false} onChange={handleOnCheckboxChange} />\n                <FormLabel htmlFor=\"sold\" ml=\"16px\">\n                  Vendido\n                </FormLabel>\n              </FormControl>\n            </GridItem>\n          </Grid>\n          <Box>\n            <Text my=\"8px\" fontSize=\"sm\">\n              Descri√ß√£o\n            </Text>\n            <Textarea \n              id=\"description\"\n              onChange={handleOnChange}\n              value={props.formValues.description}\n              variant=\"filled\" />\n          </Box>\n        </ModalBody>\n        <ModalFooter>\n          <Button \n            onClick={handleOnConfirm}\n            size=\"sm\" mr={5} colorScheme=\"teal\">\n            {props.confirmLabel}\n          </Button>\n          <Button \n            onClick={props.onClose}\n            size=\"sm\" colorScheme=\"red\">\n            Fechar\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default VehicleModal;\n","import * as React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  VStack,\n  Grid,\n  theme,\n  Flex,\n  IconButton,\n} from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons';\nimport VehicleList from './components/vehicleList';\nimport VehicleDetails from './components/vehicleDetails';\nimport Header from './components/header';\nimport useCarList from './hooks/useCarList';\nimport { Vehicle } from './model/Vehicle';\nimport { useEffect } from 'react';\nimport { BaseApi } from './constants/endpoints';\nimport VehicleModal from './components/VehicleModal';\nimport { useState } from 'react';\n\nconst initialState = {\n    model: '',\n    brand: '',\n    year: 0,\n    sold: false,\n    description: ''\n  }\n\nexport const App = () => {\n  const [state, dispatch] = useCarList();\n  const [formValues, setFormValues] = useState<Vehicle>(initialState)\n\n  const [modalVehicleState, setModalVehicleState] = useState({\n    isOpen: false,\n    title: 'Novo ve√≠culo',\n    confirmLabel: 'Add', \n  });\n\n  const handleOnSelected = (value: Vehicle) => {\n    dispatch({ type: 'CAR_SELECTED', payload: value });\n  };\n\n\n  const handleOnClose = () =>{\n    setFormValues(initialState)\n    setModalVehicleState((previous) => ({\n      ...previous,\n      isOpen: !previous.isOpen,\n    }));\n  }\n\n  const handleOnCreate = () =>\n    setModalVehicleState((previous) => ({ ...previous, isOpen: true }));\n\n  async function getVehicles() {\n    const response = await fetch(`${BaseApi}/vehicles`)\n    const data = await response.json()\n    dispatch({ type: 'SET_VEHICLES', payload: data })\n  }\n\n  const handleSubmitSearch = (search: string) => {\n    const payload = state.vehicles.filter(vehicle => vehicle.model.includes(search))\n    dispatch({ type: 'SET_FILTERED_VEHICLES', payload })\n  }\n\n  useEffect(() => {\n    getVehicles();\n  }, []);\n\n  async function handleOnClickEdit() {\n    if (!state.selectedItem) return;\n    setFormValues(state.selectedItem)\n    setModalVehicleState({\n      confirmLabel: \"Editar\",\n      isOpen: true,\n      title: 'Editar ve√≠culo'\n    })\n  }\n    async function updateVehicle(vehicle: Vehicle) {\n    try {\n      await fetch(`${BaseApi}/vehicles/${vehicle.id}`, {\n        body: JSON.stringify(vehicle),\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        }\n      });\n      setModalVehicleState(previous => ({ ...previous, isOpen: false}))\n      setFormValues(initialState);\n      dispatch({ type: 'CAR_SELECTED', payload: vehicle})\n      getVehicles()\n    }catch (err) {\n      alert(err.message);\n    }\n  }\n\n\n  async function addVehicle(vehicle: Vehicle) {\n    try {\n      await fetch(`${BaseApi}/vehicles`, {\n        body: JSON.stringify(vehicle),\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        }\n      });\n      setModalVehicleState(previous => ({ ...previous, isOpen: false}))\n      setFormValues(initialState);\n      getVehicles()\n    }catch (err) {\n      alert(err.message);\n    }\n  }\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Grid minH=\"100vh\" w=\"100%\" overflow=\"hidden\" bgColor=\"#e2e4e1\">\n        <VStack>\n          <Header \n            onSubmitSearch={handleSubmitSearch}\n          />\n          <Box w=\"100%\" p={16}>\n            <Flex justifyContent=\"space-between\">\n              <Text fontSize=\"3xl\">Ve√≠culo</Text>\n              <IconButton\n                onClick={handleOnCreate}\n                aria-label=\"new vehicle\"\n                colorScheme=\"teal\"\n                size=\"md\"\n                icon={<AddIcon />}\n              />\n            </Flex>\n            <Flex>\n              <VehicleList\n                onSelected={handleOnSelected}\n                selectedItem={state.selectedItem}\n                data={state.filteredVehicles}\n              />\n              <VehicleDetails \n                onClickEdit={handleOnClickEdit}\n                data={state.selectedItem} />\n            </Flex>\n          </Box>\n        </VStack>\n        <VehicleModal\n          title={modalVehicleState.title}\n          onClose={handleOnClose}\n          formValues={formValues}\n          setFormValues={setFormValues}\n          addVehicle={addVehicle}\n          updateVehicle={updateVehicle}\n          confirmLabel={modalVehicleState.confirmLabel}\n          isOpen={modalVehicleState.isOpen}\n        />\n      </Grid>\n    </ChakraProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"header_input__2cfQn\"};"],"sourceRoot":""}